{"ast":null,"code":"const dict = require('./emoji.json');\n\nlet cache = false;\nconst NOT_FOUND_EMOJI = `(╯°□°）╯︵ ᔭ0ᔭ`;\n/**\n * Loads emoji from dictionary by provided key (theme).\n * If the key wasn't  provided, than go through all dictionary and combines all arrays together.\n * For faster performance, resulting array is stored into the cache.\n * @param {string?} theme - optional key from the dictionary.\n * @returns {string[]} list of memes.\n */\n\nconst loadEmoji = theme => {\n  if (theme) {\n    return dict[theme] || [];\n  } else {\n    if (!cache) cache = Object.keys(dict).reduce((memo, acc) => {\n      return [...memo, ...dict[acc]];\n    }, []);\n    return cache;\n  }\n};\n/**\n * Get single random emoji, by given theme or without one.\n * @param {string?} theme - optional key from the dictionary.\n * @returns {string} random emoji from subset of emoji.\n */\n\n\nconst loadOneEmoji = (theme = '') => {\n  const emoji = loadEmoji(theme);\n  const i = Math.floor(Math.random() * (emoji.length - 1)) + 1;\n  return emoji[i] || NOT_FOUND_EMOJI;\n};\n/**\n * Get list of keys (themes) from dictionary.\n * @returns {string[]} list of keys.\n */\n\n\nconst loadDictKeys = () => {\n  return Object.keys(dict);\n};\n\nmodule.exports.getEmoji = loadOneEmoji;\nmodule.exports.getAllEmoji = loadEmoji;\nmodule.exports.getThemes = loadDictKeys;","map":{"version":3,"sources":["/Users/helenzhang/Desktop/Development/node_modules/random-text-meme/index.js"],"names":["dict","require","cache","NOT_FOUND_EMOJI","loadEmoji","theme","Object","keys","reduce","memo","acc","loadOneEmoji","emoji","i","Math","floor","random","length","loadDictKeys","module","exports","getEmoji","getAllEmoji","getThemes"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,cAAD,CAApB;;AACA,IAAIC,KAAK,GAAG,KAAZ;AACA,MAAMC,eAAe,GAAI,cAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,MAAIA,KAAJ,EAAW;AACP,WAAOL,IAAI,CAACK,KAAD,CAAJ,IAAe,EAAtB;AACH,GAFD,MAEO;AACH,QAAI,CAACH,KAAL,EACIA,KAAK,GAAGI,MAAM,CAACC,IAAP,CAAYP,IAAZ,EAAkBQ,MAAlB,CAAyB,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5C,aAAO,CAAC,GAAGD,IAAJ,EAAU,GAAGT,IAAI,CAACU,GAAD,CAAjB,CAAP;AACH,KAFO,EAEL,EAFK,CAAR;AAGJ,WAAOR,KAAP;AACH;AACJ,CAVD;AAYA;AACA;AACA;AACA;AACA;;;AACA,MAAMS,YAAY,GAAG,CAACN,KAAK,GAAG,EAAT,KAAgB;AACjC,QAAMO,KAAK,GAAGR,SAAS,CAACC,KAAD,CAAvB;AACA,QAAMQ,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBJ,KAAK,CAACK,MAAN,GAAe,CAAhC,CAAX,IAAiD,CAA3D;AACA,SAAOL,KAAK,CAACC,CAAD,CAAL,IAAYV,eAAnB;AACH,CAJD;AAMA;AACA;AACA;AACA;;;AACA,MAAMe,YAAY,GAAG,MAAM;AACvB,SAAOZ,MAAM,CAACC,IAAP,CAAYP,IAAZ,CAAP;AACH,CAFD;;AAIAmB,MAAM,CAACC,OAAP,CAAeC,QAAf,GAA0BV,YAA1B;AACAQ,MAAM,CAACC,OAAP,CAAeE,WAAf,GAA6BlB,SAA7B;AACAe,MAAM,CAACC,OAAP,CAAeG,SAAf,GAA2BL,YAA3B","sourcesContent":["const dict = require('./emoji.json');\nlet cache = false;\nconst NOT_FOUND_EMOJI = `(╯°□°）╯︵ ᔭ0ᔭ`;\n\n/**\n * Loads emoji from dictionary by provided key (theme).\n * If the key wasn't  provided, than go through all dictionary and combines all arrays together.\n * For faster performance, resulting array is stored into the cache.\n * @param {string?} theme - optional key from the dictionary.\n * @returns {string[]} list of memes.\n */\nconst loadEmoji = (theme) => {\n    if (theme) {\n        return dict[theme] || [];\n    } else {\n        if (!cache)\n            cache = Object.keys(dict).reduce((memo, acc) => {\n                return [...memo, ...dict[acc]];\n            }, []);\n        return cache;\n    }\n};\n\n/**\n * Get single random emoji, by given theme or without one.\n * @param {string?} theme - optional key from the dictionary.\n * @returns {string} random emoji from subset of emoji.\n */\nconst loadOneEmoji = (theme = '') => {\n    const emoji = loadEmoji(theme);\n    const i = Math.floor(Math.random() * (emoji.length - 1)) + 1;\n    return emoji[i] || NOT_FOUND_EMOJI;\n};\n\n/**\n * Get list of keys (themes) from dictionary.\n * @returns {string[]} list of keys.\n */\nconst loadDictKeys = () => {\n    return Object.keys(dict);\n};\n\nmodule.exports.getEmoji = loadOneEmoji;\nmodule.exports.getAllEmoji = loadEmoji;\nmodule.exports.getThemes = loadDictKeys;\n"]},"metadata":{},"sourceType":"script"}